version: 1
indices:
  en:
    include:
      - '/en-ca/**'
    exclude:
      - '/drafts/**'
      - 'images/**'
      - '/**/footer'
      - '/footer'
      - '/**/nav'
      - '/nav'
      - '/**/fragments/**'
      - '/**/sub-nav'
      - '/**/news-and-stories/tags'
      - '/block-library/**'
    target: /en-ca/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      description:
        select: head > meta[name="description"]
        value: attribute(el, "content")
  fr:
    include:
      - '/fr-ca/**'
    exclude:
      - '/drafts/**'
      - 'images/**'
      - '/**/footer'
      - '/footer'
      - '/**/nav'
      - '/nav'
      - '/**/fragments/**'
      - '/**/sub-nav'
      - '/**/news-and-stories/tags'
      - '/block-library/**'
    target: /fr-ca/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      description:
        select: head > meta[name="description"]
        value: attribute(el, "content")
#  en-press-releases:
#    include:
#      - '/en-ca/news-and-stories/press-releases/**'
#    exclude:
#      - '/en-ca/news-and-stories/press-releases'
#      - '/en-ca/news-and-stories/press-releases/sub-nav'
#    target: /en-ca/press-releases.json
#    properties:
#      title:
#        select: head > meta[property="og:title"]
#        value: attribute(el, "content")
#      image:
#        select: head > meta[property="og:image"]
#        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
#      description:
#          select: head > meta[property="og:description"]
#          value: attribute(el, "content")
#      tags:
#        select: head > meta[property="article:tag"]
#        values: attribute(el, "content")
#      lastModified:
#        select: none
#        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
#      publishDate:
#        select: head > meta[name="publish-date"]
#        value: parseTimestamp(attribute(el, "content"), MM/DD/YYYY)
#      content:
#        select: main
#        value: textContent(el)
#  fr-press-releases:
#    include:
#      - '/fr-ca/news-and-stories/press-releases/**'
#    exclude:
#      - '/fr-ca/news-and-stories/press-releases'
#      - '/fr-ca/news-and-stories/press-releases/sub-nav'
#    target: /fr-ca/press-releases.json
#    properties:
#      title:
#        select: head > meta[property="og:title"]
#        value: attribute(el, "content")
#      image:
#        select: head > meta[property="og:image"]
#        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
#      description:
#          select: head > meta[property="og:description"]
#          value: attribute(el, "content")
#      tags:
#        select: head > meta[property="article:tag"]
#        values: attribute(el, "content")
#      lastModified:
#        select: none
#        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
#      publishDate:
#        select: head > meta[name="publish-date"]
#        value: parseTimestamp(attribute(el, "content"), MM/DD/YYYY)
#      content:
#        select: main
#        value: textContent(el)
#  en-magazine-articles:
#    include:
#      - '/en-ca/news-and-stories/volvo-trucks-magazine/**'
#    exclude:
#      - '/en-ca/news-and-stories/volvo-trucks-magazine'
#    target: /en-ca/magazine-articles.json
#    properties:
#      template:
#        select: head > meta[name="template"]
#        value: attribute(el, "content")
#      title:
#        select: head > meta[property="og:title"]
#        value: attribute(el, "content")
#      linkText:
#        select: head > meta[property="linkText"]
#        value: attribute(el, "content")
#      description:
#        select: head > meta[property="og:description"]
#        value: attribute(el, "content")
#      author:
#        select: head > meta[name="author"]
#        value: attribute(el, "content")
#      category:
#        select: head > meta[property="category"]
#        value: attribute(el, "content")
#      tags:
#        select: head > meta[property="article:tag"]
#        values: attribute(el, "content")
#      image:
#        select: head > meta[property="og:image"]
#        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
#      readingTime:
#        select: head > meta[name="readingtime"]
#        value: attribute(el, "content")
#      lastModified:
#        select: none
#        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
#      publishDate:
#        select: head > meta[name="publish-date"]
#        value: parseTimestamp(attribute(el, "content"), MM/DD/YYYY)
#      content:
#        select: main
#        value: textContent(el)
#  fr-magazine-articles:
#    include:
#      - '/fr-ca/news-and-stories/volvo-trucks-magazine/**'
#    exclude:
#      - '/fr-ca/news-and-stories/volvo-trucks-magazine'
#    target: /fr-ca/magazine-articles.json
#    properties:
#      template:
#        select: head > meta[name="template"]
#        value: attribute(el, "content")
#      title:
#        select: head > meta[property="og:title"]
#        value: attribute(el, "content")
#      linkText:
#        select: head > meta[property="linkText"]
#        value: attribute(el, "content")
#      description:
#        select: head > meta[property="og:description"]
#        value: attribute(el, "content")
#      author:
#        select: head > meta[name="author"]
#        value: attribute(el, "content")
#      category:
#        select: head > meta[property="category"]
#        value: attribute(el, "content")
#      tags:
#        select: head > meta[property="article:tag"]
#        values: attribute(el, "content")
#      image:
#        select: head > meta[property="og:image"]
#        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
#      readingTime:
#        select: head > meta[name="readingtime"]
#        value: attribute(el, "content")
#      lastModified:
#        select: none
#        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
#      publishDate:
#        select: head > meta[name="publish-date"]
#        value: parseTimestamp(attribute(el, "content"), MM/DD/YYYY)
#      content:
#        select: main
#        value: textContent(el)
#  en-body-builder:
#    include:
#      - '/en-ca/parts-and-services/services/body-builder-support/news-and-events/**'
#    exclude:
#      - '/en-caparts-and-services/services/body-builder-support/news-and-events'
#    target: /en-ca/body-builder.json
#    properties:
#      template:
#        select: head > meta[name="template"]
#        value: attribute(el, "content")
#      title:
#        select: h1
#        value: textContent(el)
#      index_title:
#        select: head > meta[name="index_title"]
#        value: attribute(el, "content")
#      date:
#        select: head > meta[name="index_date"]
#        value: parseTimestamp(attribute(el, "content"), MM/DD/YYYY)
#      description:
#        select: head > meta[property="og:description"]
#        value: attribute(el, "content")
#      image:
#        select: head > meta[property="og:image"]
#        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
#      lastModified:
#        select: none
#        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
#  fr-body-builder:
#    include:
#      - '/fr-ca/parts-and-services/services/body-builder-support/news-and-events/**'
#    exclude:
#      - '/fr-caparts-and-services/services/body-builder-support/news-and-events'
#    target: /fr-ca/body-builder.json
#    properties:
#      template:
#        select: head > meta[name="template"]
#        value: attribute(el, "content")
#      title:
#        select: h1
#        value: textContent(el)
#      index_title:
#        select: head > meta[name="index_title"]
#        value: attribute(el, "content")
#      date:
#        select: head > meta[name="index_date"]
#        value: parseTimestamp(attribute(el, "content"), MM/DD/YYYY)
#      description:
#        select: head > meta[property="og:description"]
#        value: attribute(el, "content")
#      image:
#        select: head > meta[property="og:image"]
#        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
#      lastModified:
#        select: none
#        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
#  search:
#    include:
#      - '/**'
#    exclude:
#      - '/drafts/**'
#      - 'images/**'
#      - '/**/footer'
#      - '/footer'
#      - '/**/nav'
#      - '/nav'
#      - '/**/fragments/**'
#      - '/**/sub-nav'
#      - '/**/news-and-stories/tags'
#      - '/block-library/**'
#    properties:
#      published:
#        select: none
#        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
#      title:
#        select: head > meta[property="og:title"]
#        value: attribute(el, "content")
#      description:
#        select: head > meta[name="description"]
#        value: attribute(el, "content")
#      template:
#        select: head > meta[name="template"]
#        value: attribute(el, "content")
#      tags:
#        select: head > meta[property="article:tag"]
#        values: attribute(el, "content")
